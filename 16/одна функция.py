# Алгоритм вычисления функции F(n) задан следующими соотношениями:
# F(n) = n при n ≤ 3;
# F(n) = 2 · n  + F(n – 1)  при чётных n > 3; 
# F(n) = n · n  + F(n – 2)  при нечётных n > 3;
# Определите количество натуральных значений n из отрезка [1; 100], 
# при которых значение F(n) кратно 3.

# Для решение тупо перепишем все из условия.

# Назовем функцию также, как и в условии.
def F(n):
	if n <= 3: # при n ≤ 3
		return n
	elif n % 2 == 0 and n > 3: # при чётных n > 3
		return 2 * n + F(n - 1)
	elif n % 2 != 0 and n > 3: # при нечётных n > 3
		return n * n + F(n - 2)

# Зададим переменную count для подсчета количества.
count = 0

# Итерируем через все числа от 1 до 100.
for i in range(1, 101):
	# Зададим n. Она будем хранить результата функции F от числа i 
	n = F(i)

	# Проверяем делиомсть чилса на 3.
	if n % 3 == 0:
		count += 1 # При успехе, добавляем +1 в count

# Выводим ответ.
print(count) # Ответ - 32