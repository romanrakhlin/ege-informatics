# (№ 1788) На вход алгоритма подаётся натуральное число N. 
# Алгоритм строит по нему новое число R следующим образом.
# 1) Строится двоичная запись числа N.
# 2) Затем справа дописываются два разряда: символы 01, 
# если число N чётное, и 10, если нечётное.
# Полученная таким образом запись 
# (в ней на два разряда больше, 
# чем в записи исходного числа N) 
# является двоичной записью искомого числа R. 
# Укажите минимальное число N, 
# после обработки которого автомат получает число, 
# большее 138. В ответе это число запишите 
# в десятичной системе.

# Создадим функцию для перевода из 2с.с. в 10с.с.
# Я уже до этого делал подобное, так что думаю что вы
# уже с ней знакомы. Она работает по тому же принципу,
# что и перевод на бумажке.
def perevod(s):
	result = 0
	x = 0

	for i in s[::-1]:
		result += (2 ** x) * int(i)
		x += 1

	return result

# Эта функция обрабатывает число.
# Внизу я расставлю цифры, вы по ним ориентируйтесь.
# Алгоритм:
# 1 - Переводим число в 2с.с. 
# (убираем первые 2 символа 0b c помощью [2:]).
# 2 - Проваеряем четность или нечетность числа
# и добавляем в конец два разряда.
# 3 - Переводим число из 2с.с. в 10с.с.
# с помощью функции: которую мы написали выше.
def prepare(n):
	### 1 ###
	s = bin(n)[2:]

	### 2 ###
	if n % 2 == 0:
		s += "01"
	else:
		s += "10"

	### 3 ###
	result = perevod(s)
	return result

# Перебираем все числа от 1 до 1000
# и если функция prepare(число) возвращает
# новоо число большее 138, то мы выводим i,
# при котором нам это удалось и останавливает цикл.
for i in range(1, 1000):
	n = prepare(i)
	if n > 138:
		print(i)
		break

